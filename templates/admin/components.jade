extends layout

block title
  title #{__(componentTypePlural)} - #{__('Admin Panel')}

block stylesheets

block content

  .container
    h2 #{__('Manage')} #{__(componentTypePlural)}
    table.table.table-responsive.table-hover.table-striped
      thead: tr
        th #{__(componentTypePlural + ' name')}
        th.hidden-xs #{__('Description')}
        th 
          .hidden-xs #{__('Actions')}
      tbody
        each component in states
          tr
            td
              b.panel-title= (typeof components[component.name].metadata.name === 'undefined' ? component.name : components[component.name].metadata.name)
              .visible-xs
                p= components[component.name].metadata.description
                p= components[component.name].metadata.author
            td.hidden-xs
              small
                p= components[component.name].metadata.description
                p= components[component.name].metadata.author
            td
              div(aria-label="#{__('Options')}")

                -var action= (component.enabled? 'disable' : 'enable')
                -var btnclass= (component.enabled? 'btn-success' : 'btn-inverse')
                -var icon= ( 'ion-checkmark-circled')
                
                if componentType == 'template'
                  button.btn.live-btn(class=btnclass, data-action="activate", data-id=component.name, type="button", data-toggle="tooltip", data-placement="top", title="#{__('Click to ' + action)}") 
                    i.icon(class=icon, style="color:white")
                  a(href="/admin/#{componentType}/edit/" + component.name): button.btn.btn-info.live-btn(data-action="edit", type="button", data-toggle="tooltip", data-placement="top", title="#{__('Edit')}") 
                    i.icon.ion-edit(style="color:white")
                else
                  button.btn.live-btn(class=btnclass, data-action="toggle", data-id=component.name, type="button", data-toggle="tooltip", data-placement="top", title="#{__('Click to ' + action)}") 
                    i.icon(class=icon, style="color:white")
                a(href="/admin/#{componentType}/" + component.name ): button.btn.btn-default.live-btn(type="button", data-toggle="tooltip", data-placement="top", title="#{__('Configuration')}")
                  i.icon.ion-levels
                //a(href="#", data-action="delete" ): button.btn.btn-danger(type="button", data-toggle="tooltip", data-placement="top", title="#{__('Remove this #{componentType}...')}")
                //  i.icon.ion-trash-b(style="color:white")
block scripts
  script.
    $(function() {
      $("button[data-action='toggle']").bind('click', function(){
        var component= $(this).data('id');
        var that = this;
        $.ajax({
          url: '/admin/#{componentType}/toggle/' + component,
          dataType: 'json',
          complete: function(response){
            var data = $.parseJSON(response.responseText);
            var icon, btnclass, action;
            if(data.state=='enabled'){
              action = '#{__('Click to disable')}';
              icon = 'ion-checkmark-circled';
              btnclass = 'btn-success';
            }else if(data.state=='disabled'){
              action = '#{__('Click to enable')}';
              icon = 'ion-close-circled';
              btnclass = 'btn-inverse';
            }
            console.log(data.state);
            $("button[data-id='" + data.key + "']").removeClass (function (index, css) {
                return (css.match (/(^|\s)btn-\S+/g) || []).join(' ');})
              .addClass(btnclass)
              .css({'color': 'white'});
            $("button[data-id='" + data.key + "']").find('i')
              .removeClass (function (index, css) {
                return (css.match (/(^|\s)ion-\S+/g) || []).join(' ');})
              .addClass(icon);
            $("button[data-id='" + data.key + "']")
              .attr('data-original-title', action)
              .tooltip('fixTitle')
              .tooltip('show');
          }
        

        });
      });
      $("button[data-action='activate']").bind('click', function(){
        var component= $(this).data('id');
        var that = this;
        $.ajax({
          url: '/admin/#{componentType}/toggle/' + component,
          dataType: 'json',
          complete: function(response){
            var data = $.parseJSON(response.responseText);
            var icon, btnclass, action;
            if(data.state=='enabled'){
              action = '#{__('Click to disable')}';
              icon = 'ion-checkmark-circled';
              btnclass = 'btn-success';
            }else if(data.state=='disabled'){
              action = '#{__('Click to enable')}';
              icon = 'ion-close-circled';
              btnclass = 'btn-inverse';
            }
            console.log(data.state);

            $("button[data-action='activate']").removeClass (function (index, css) {
                return (css.match (/(^|\s)btn-\S+/g) || []).join(' ');})
              .addClass('btn-inverse')
              .css({'color': 'white'});
            $("button[data-action='activate']").find('i')
              .removeClass (function (index, css) {
                return (css.match (/(^|\s)ion-\S+/g) || []).join(' ');})
              .addClass('ion-close-circled');

            $("button[data-id='" + data.key + "']").removeClass (function (index, css) {
                return (css.match (/(^|\s)btn-\S+/g) || []).join(' ');})
              .addClass(btnclass)
              .css({'color': 'white'});
            $("button[data-id='" + data.key + "']").find('i')
              .removeClass (function (index, css) {
                return (css.match (/(^|\s)ion-\S+/g) || []).join(' ');})
              .addClass(icon);
            $("button[data-id='" + data.key + "']")
              .attr('data-original-title', action)
              .tooltip('fixTitle')
              .tooltip('show');
          }
        

        });
      });
    });
  